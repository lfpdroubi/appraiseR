% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerPlot.R
\name{powerPlot}
\alias{powerPlot}
\alias{powerPlot.default}
\alias{powerPlot.lm}
\alias{powerPlot.bestfit}
\alias{powerPlot.lmerMod}
\title{Power plots with ggplot2}
\usage{
powerPlot(y, yhat, ...)

\method{powerPlot}{default}(
  y,
  yhat,
  axis = c("standard", "inverted"),
  smooth = TRUE,
  se = FALSE,
  ...
)

\method{powerPlot}{lm}(object, func, ...)

\method{powerPlot}{bestfit}(object, fit = 1, scale = c("transformed", "original"), ...)

\method{powerPlot}{lmerMod}(object, func, ...)
}
\arguments{
\item{y}{observed values}

\item{yhat}{predicted values}

\item{\dots}{further args passed to powerPlot.default}

\item{axis}{option to plot predicted values on the x axis (inverted) or in
the y axis (standard)}

\item{smooth}{option to add a regression line to the plot}

\item{object}{object of class \code{\link{lm}} or \code{\link{bestfit}}}

\item{func}{function used to transform the dependent variable}

\item{fit}{chosen fit}

\item{scale}{Plot values in original or transformed scale?}
}
\value{
a power plot
}
\description{
\code{powerPlot} generates Power Plots for \code{\link{lm}} or
\code{\link{bestfit}} objects with \code{\link{ggplot2}}.
}
\examples{
library(sf)
dados <- st_drop_geometry(centro_2015)
dados$padrao <- as.numeric(dados$padrao)
fit <- lm(log(valor) ~ area_total + quartos + suites + garagens +
log(dist_b_mar) + I(1/padrao), dados, subset = -c(31, 39))
s <- summary(fit)
# Mediana
library(ggplot2)
p <- powerPlot(y = na.omit(dados$valor)[-c(31,39)], yhat = exp(fitted(fit)),
axis = "inverted")
p + labs(title = "Poder de PrediÃ§Ã£o", subtitle = "Mediana")
# MÃ©dia
p1 <- powerPlot(y = na.omit(dados$valor)[-c(31,39)],
                yhat = exp(fitted(fit) + s$sigma^2/2),  axis = "inverted")
p1 + labs(title = "Poder de PrediÃ§Ã£o", subtitle = "MÃ©dia")
# Moda
p2 <- powerPlot(y = na.omit(dados$valor)[-c(31,39)],
                yhat = exp(fitted(fit) - s$sigma^2), axis = "inverted")
p2 + labs(title = "Poder de PrediÃ§Ã£o", subtitle = "Moda")
powerPlot(fit)
powerPlot(fit, se = TRUE)
powerPlot(fit, smooth = FALSE)
powerPlot(fit, axis = "inverted")
p <- powerPlot(fit, func = "log", axis = "inverted")
p + labs(title = "Poder de PrediÃ§Ã£o", subtitle = "Em milhÃµes de Reais")
# Changes Dep Var Transformation
fit <- lm(sqrt(valor) ~ area_total + quartos + suites + garagens +
log(dist_b_mar) + I(1/padrao), dados)
powerPlot(fit)
powerPlot(fit, func = "sqrt", axis = "inverted")
dados <- st_drop_geometry(centro_2015)
dados <- within(dados, padrao <- as.numeric(padrao))
best_fit <- bestfit(valor ~ ., dados,
                    transf = c("rec", "rsqrt", "log", "sqrt"),
                    subset = -c(31, 39))
p1 <- powerPlot(best_fit)
p2 <- powerPlot(best_fit, scale = "original")
cowplot::plot_grid(p1, p2, nrow = 1, ncol = 2)
p1 <- powerPlot(best_fit, axis = "inverted")
p2 <- powerPlot(best_fit, axis = "inverted", scale = "original")
cowplot::plot_grid(p1, p2, nrow = 1, ncol = 2)
powerPlot(best_fit, fit = 514)
p1 <- powerPlot(best_fit, fit = 514, axis = "inverted")
p2 <- powerPlot(best_fit, fit = 514, scale = "original", axis = "inverted")
cowplot::plot_grid(p1, p2, nrow = 1, ncol = 2)

library(lme4)
data(centro_2015)
dados <- st_drop_geometry(centro_2015)
Mfit <- lmer(log(valor) ~ area_total + quartos + suites + garagens +
dist_b_mar + (1|padrao), dados)
powerPlot(Mfit)
powerPlot(Mfit, func = "log")
}
